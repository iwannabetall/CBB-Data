{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww16880\viewh11220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs32 \cf0 Key Files listed in order of steps \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 -cbb.py \'97 this file scrapes espn for pbp data between two dates for a particular conference.  creates a folder by date for all games, filename is gameid.  also outputs a list of games played on that night (not nec that pbp data exists), will be referred to here as the game_details file \
	**game_details files need to be renamed to conference name (script currently does not automatically name script to conference name)\
	- run script by: \'93python cbb.py yyyy-mm-dd yyyy-mm-dd\'94 \
	##major conf IDs: ACC: 2; Big 10: 7; Big 12:8; SEC: 23; Pac 12:21; Big East: 4; A10: 3; Mountain West: 44; Am East: 1 \
\
-cbbPBPStep2_GameDetails \'97 if cbb run for multiple conferences, this file compiles the list of games for each conference into one list of games, cleans the win/loss/rank details from the pbp stats\
-Step3PBP_Stats.py \'97 gives user a list of teams for which pbp data is avail and prompts user to enter a number corresponding to team of interest and returns cleaned pbp data w/stats for specified team\
\
\
-TeamStats.py \'97calls TeamPBPStats.py and gets pbp data for a list of teams automatically \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 -TeamPBPStats.py \'97 same as step 3 except main has been altered so that the file can be called and run for multiple teams \
\
\
\
}