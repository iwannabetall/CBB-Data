{\rtf1\ansi\ansicpg1252\cocoartf1561
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier-Bold;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red44\green44\blue44;\red0\green0\blue0;\red246\green246\blue246;
\red14\green110\blue109;\red210\green0\blue53;\red133\green0\blue2;\red254\green200\blue154;\red255\green255\blue255;
\red0\green0\blue0;\red53\green65\blue117;\red235\green235\blue235;\red252\green104\blue109;}
{\*\expandedcolortbl;;\cssrgb\c22745\c22745\c22745;\cssrgb\c0\c0\c0;\cssrgb\c97255\c97255\c97255;
\cssrgb\c0\c50196\c50196;\cssrgb\c86667\c6667\c26667;\cssrgb\c60000\c0\c0;\cssrgb\c100000\c82353\c66667\c80000;\csgray\c100000;
\csgray\c0\c0;\cssrgb\c26667\c33333\c53333;\cssrgb\c93725\c93725\c93725;\cssrgb\c100000\c50196\c50196\c80000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid1\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid101\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid201\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\i\fs40 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 -interpolation
\i0 . When you interpolate a string, you can mix in a variable (or constant) you declared before along with a string.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls1\ilvl0
\f1\b\fs34 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 let
\f2\b0 \cf2 \strokec2  \cf5 \strokec5 color\cf2 \strokec2  
\f1\b \cf3 \strokec3 =
\f2\b0 \cf2 \strokec2  \cf6 \strokec6 "blue"\cf2 \cb1 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls1\ilvl0
\f1\b \cf7 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 print
\f2\b0 \cf2 \strokec2 (\cf6 \strokec6 "The sky is \\(\cf2 \strokec2 color\cf6 \strokec6 )."\cf2 \strokec2 )\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls1\ilvl0
\f1\b \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 var
\f2\b0 \cf2 \strokec2  \cf5 \strokec5 skySentence\cf2 \strokec2  
\f1\b \cf3 \strokec3 =
\f2\b0 \cf2 \strokec2  \cf6 \strokec6 "The sky is \\(\cf2 \strokec2 color\cf6 \strokec6 )."\cf2 \cb1 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls2\ilvl0
\f1\b \cf7 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 print
\f2\b0 \cf2 \strokec2 (skySentence)\cb1 \
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs40 \cf3 \cb8 \strokec3 \
in Swift, a\'a0
\f2\fs34 String
\f0\fs40 \'a0can contain any character. In addition to alphanumeric characters like\'a0
\f2\fs34 a
\f0\fs40 \'a0and\'a0
\f2\fs34 9
\f0\fs40 , they can also be symbols such as\'a0
\f2\fs34 @
\f0\fs40 \'a0or\'a0
\f2\fs34 +
\f0\fs40 , or even a space. They can also be characters from languages other than English, such as\'a0
\f2\fs34 \'f1
\f0\fs40 \'a0or\'a0
\f2\fs34 \'df
\f0\fs40 . They can even contain other symbols, like\'a0
\f2\fs34 \'99
\f0\fs40 \'a0or\'a0
\f2\fs34 \'a9
\f0\fs40 . If you can type it, you can put it in a\'a0
\f2\fs34 String
\f0\fs40 !\
\cf9 \cb10 \
\cf3 -if don\'92t set value, tell swift type of var: \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl500\partightenfactor0
\ls3\ilvl0
\f1\b\fs34 \cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 var
\f2\b0 \cf3 \strokec2  \strokec5 ninthPlanet\strokec2 : 
\f1\b \strokec11 String\
\ls3\ilvl0
\f2\b0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs40 \cf2 \cb1 Playgrounds have a nifty feature that let you find out some information (or\'a0
\i metadata
\i0 ) about variables and constants. Hold down the\'a0
\f2 Option
\f0 \'a0key and hover your cursor over the\'a0
\f2\fs34 \cb12 thirdPlanet
\f0\fs40 \cb1 \'a0in your playground file. It will be highlighted and underlined in blue.\
\
Remember,\'a0\cf3 \cb13 \strokec3 a\'a0
\i method
\i0 \'a0is just a function that is attached to a particular data type. Methods are called like functions, except you put the constant or variable you call on them\'a0
\i before
\i0 \'a0the method name, followed by a dot, and then the name of the method.\cf2 \cb1 \strokec2 \'a0\
\
You can implicitly declar a boolean variable\'a0
\f2\fs34 \cb12 let a = false
\f0\fs40 \cb1 \'a0or explicitly declare a boolean variable\'a0
\f2\fs34 \cb12 let i:Bool = true
\f0\fs40 \cb1 .}